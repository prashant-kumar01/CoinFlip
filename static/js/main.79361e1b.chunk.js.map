{"version":3,"sources":["Coin.js","App.js","reportWebVitals.js","index.js"],"names":["Coin","name","symbol","price","volume","image","priceChange","className","src","alt","toFixed","App","useState","Coins","setCoin","search","setsearch","useEffect","axios","get","then","res","data","catch","error","console","log","filteredCoins","filter","coin","toLowerCase","includes","class","type","placeholder","onChange","e","target","value","style","fontSize","color","map","current_price","total_volume","price_change_percentage_24h","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAwBeA,EAtBF,SAAC,GAAkD,IAAjDC,EAAgD,EAAhDA,KAAKC,EAA2C,EAA3CA,OAAOC,EAAoC,EAApCA,MAAMC,EAA8B,EAA9BA,OAAOC,EAAuB,EAAvBA,MAAMC,EAAiB,EAAjBA,YAC1C,OACI,qBAAKC,UAAU,iBAAf,SACI,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,OAAf,UACA,qBAAKC,IAAKH,EAAOI,IAAI,gBACrB,6BAAKR,IACL,mBAAGM,UAAU,cAAb,SAA4BL,OAE5B,sBAAKK,UAAU,YAAf,UACF,oBAAGA,UAAU,aAAb,mBAA4BJ,KAC5B,oBAAGI,UAAU,cAAb,oBAA8BH,EAAO,OAEjCE,EAAY,EAAI,oBAAGC,UAAU,mBAAb,UAAkCD,EAAYI,QAAQ,GAAtD,OACf,oBAAGH,UAAU,qBAAb,UAAoCD,EAAYI,QAAQ,GAAxD,gB,MC+CJC,MA3Df,WAEA,MAAyBC,mBAAS,IAAlC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA2BF,mBAAS,IAApC,mBAAOG,EAAP,KAAcC,EAAd,KACAC,qBAAU,WACRC,IAAMC,IAAI,6HACTC,MAAK,SAAAC,GACJP,EAAQO,EAAIC,SAEXC,OAAM,SAAAC,GACPC,QAAQC,IAAIF,QAEd,IAEF,IAGMG,EAAcd,EAAMe,QAAO,SAAAC,GAAI,OAAIA,EAAK5B,KAAK6B,cAAcC,SAAShB,EAAOe,kBAE/E,OAEE,sBAAKvB,UAAU,WAAf,UACE,qBAAIA,UAAU,OAAd,sBAA8B,mBAAGyB,MAAM,oBACvC,qBAAKzB,UAAU,cAAf,SACE,+BACE,uBAAO0B,KAAK,OAAOC,YAAY,mBAAmB3B,UAAU,aAAa4B,SAXhE,SAACC,GAClBpB,EAAUoB,EAAEC,OAAOC,cAcb,sBAAK/B,UAAU,WAAf,UACE,sBAAKA,UAAU,OAAf,UACE,oBAAIgC,MAAO,CAACC,SAAU,GAAIC,MAAO,oBAAjC,kBACA,mBAAGlC,UAAU,mBAAb,uBAEF,sBAAKA,UAAU,YAAf,UACE,mBAAGA,UAAU,kBAAb,mBACA,mBAAGA,UAAU,mBAAb,4BACA,mBAAGA,UAAU,oBAAb,0BAIJoB,EAAce,KAAI,SAAAb,GAChB,OACI,cAAC,EAAD,CACA5B,KAAM4B,EAAK5B,KACXI,MAAOwB,EAAKxB,MACZH,OAAQ2B,EAAK3B,OACbC,MAAO0B,EAAKc,cACZvC,OAAQyB,EAAKe,aACbtC,YAAauB,EAAKgB,6BANHhB,EAAKiB,WCnCnBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.79361e1b.chunk.js","sourcesContent":["import React from 'react'\nimport './Coin.css'\nconst Coin = ({name,symbol,price,volume,image,priceChange}) => {\n    return (\n        <div className=\"coin-container\">\n            <div className=\"coin-row\">\n                <div className=\"coin\">\n                <img src={image} alt='imageofcoin'></img>\n                <h1>{name}</h1>\n                <p className=\"coin-symbol\">{symbol}</p>\n                </div>\n                <div className=\"coin_data\">\n              <p className=\"coin-price\">₹{price}</p>\n              <p className=\"coin-volume\"> ₹{volume/10000000}</p>\n              {\n                  priceChange<0 ?(<p className=\"coin-percent red\" >{priceChange.toFixed(2)}%</p>):\n                  (<p className=\"coin-percent green\" >{priceChange.toFixed(2)}%</p>)\n              }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Coin;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Coindata from './Coin';\nimport './App.css';\nfunction App() {\n\nconst [Coins, setCoin] = useState([]);\nconst [search,setsearch] = useState('');\nuseEffect(() => {\n  axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=inr&order=market_cap_desc&per_page=1000&page=1&sparkline=false')\n  .then(res=>{\n    setCoin(res.data);\n   // console.log(res.data);\n  }).catch(error=>{\n    console.log(error);\n  })\n},[]);\n\nconst handleChange=(e)=>{\n  setsearch(e.target.value);\n};\nconst filteredCoins=Coins.filter(coin => coin.name.toLowerCase().includes(search.toLowerCase()));\n\n  return (\n    \n    <div className=\"coin-app\">\n      <h1 className='naam'>CoinFlip <i class=\"fas fa-coins\"></i></h1>\n      <div className=\"coin_search\">\n        <form>\n          <input type=\"text\" placeholder='Search Crypto...' className=\"coin_input\" onChange={handleChange}></input>\n        </form> \n      </div>\n      \n        <div className=\"coin-row\">\n          <div className=\"coin\">\n            <h1 style={{fontSize: 20, color: 'rgb(94, 77, 243)'}}>NAME</h1>\n            <p className=\"coin-symbol head\">SYMBOL</p>\n          </div>\n          <div className=\"coin_data\">\n            <p className=\"coin-price head\">PRICE</p>\n            <p className=\"coin-volume head\">VOLUME(in cr.)</p>\n            <p className=\"coin-percent head\">MARKET</p>\n          </div>\n        </div>\n      {\n        filteredCoins.map(coin=>{\n          return(\n              <Coindata key={coin.id}\n              name={coin.name}\n              image={coin.image}\n              symbol={coin.symbol}\n              price={coin.current_price}\n              volume={coin.total_volume}\n              priceChange={coin.price_change_percentage_24h}\n              />\n\n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}